name: Build Web App
 
on: 
 push:
  branches:
   - master
 
jobs:
  build:
 
    runs-on: windows-latest
 
    steps:
    - uses: actions/checkout@v1
      name: Checkout Code
     
    - name: Setup MSBuild Path
      uses: warrenbuckley/Setup-MSBuild@v1
       
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.2
     
    - name: Restore NuGet Packages
      run: nuget restore VSU_CarService.sln
 
    - name: Build and Publish App
      run: msbuild VSU_CarService\VSU_CarService.csproj /p:Configuration=Release /p:DeployOnBuild=true /p:PublishProfile=FolderProfile
      
    - name: Upload Artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: VSU_CarService
        path: VSU_CarService\bin\Release\
        
     # Create the release:  https://github.com/actions/create-release
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref}}
        release_name:  ${{ github.ref }}
        draft: false
        prerelease: false
        
       # Upload release asset:   https://github.com/actions/upload-release-asset
    - name: Update release asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}  # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: VSU_CarService\bin\Release\VSU_CarService.zip
        asset_name: VSU_CarService.zip
        asset_content_type: application/zip
